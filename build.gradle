plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.erp'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.3'

	// MySQL
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.4.0'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'

	// Token
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security:3.4.0'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.querydsl:querydsl-core:5.0.0'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"


	// test
	testRuntimeOnly 'com.h2database:h2:2.2.224'
	testCompileOnly 'org.projectlombok:lombok:1.18.34'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.3'
	testImplementation("com.navercorp.fixturemonkey:fixture-monkey-starter:1.0.24")
	testImplementation 'com.google.code.gson:gson:2.11.0'
	testImplementation 'net.datafaker:datafaker:2.4.0'
	testImplementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.3.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "build/generated/sources/annotationProcessor/java/main"


sourceSets {
	main.java.srcDirs += querydslDir
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
